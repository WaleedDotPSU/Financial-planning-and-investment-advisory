<!DOCTYPE html>
<html lang="en">
<head>
  <!-- General meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Site specific tags -->
  <title>Ask Your AI</title>
  <!-- Style sheets -->
  <link rel="stylesheet" href="css/reset.css">
  <link rel="stylesheet" href="css/ai-page.css">
</head>
<body>
  <header>
    <h1>Ask Your AI</h1>
  </header>
  <main>
    <section id="conversation-area">
      <!-- Display AI and user responses here -->
      <div id="ai-responses"></div>
    </section>
    <section>
      <div id="advisory-section">
        <h2>Risk Assessment</h2>
        <form id="risk-assessment-form" class="form-group" onsubmit="return submitRiskAssessment()">
          <label for="investment-goal">How much do you want to gain from your investment? (in SAR)</label>
          <input type="number" id="investment-goal" name="investment-goal" step="any" required>

          <label for="time-horizon">What is your estimated time horizon for this investment?</label>
          <div>
            <input type="number" id="time-horizon-quantity" name="time-horizon-quantity" required>
            <select id="time-horizon-unit">
              <option value="weeks">Weeks</option>
              <option value="months">Months</option>
              <option value="years">Years</option>
            </select>
          </div>

          <label for="investment-amount">How much money are you willing to invest? (in SAR)</label>
          <input type="number" id="investment-amount" name="investment-amount" step="any" required>

          <div class="button-group">
            <button type="submit" class="button" id="submit-info-button">Submit</button>
            <button type="reset" class="button" id="reset-button">Reset</button>
          </div>
        </form>
      </div>
    </section>
    <section id="prompt-section" style="display: none;">
      <!-- Prompt for asking AI -->
      <div id="ask-ai-div">
        <input type="text" name="ask" id="ask-ai-prompt" placeholder="Ask your question...">
        <!-- Button to submit user's question -->
        <button id="ask-ai-button" class="button" onclick="askAI()">Ask AI</button>
        <button id="copy-button" class="button" onclick="copyLastAIResponse()">Copy Last AI Response</button>
      </div>
    </section>
    <section>
      <!-- Link to go back to home page -->
      <a href="/home-page" class="back-button">Back</a>
    </section>
  </main>
  <footer>
    <!-- JavaScript files -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
      // Clear session storage at the beginning of each conversation
      sessionStorage.clear();

      // Function to submit risk assessment form
      function submitRiskAssessment() {
        // Validate form inputs
        var goal = document.getElementById("investment-goal").value;
        var horizonQuantity = document.getElementById("time-horizon-quantity").value;
        var amount = document.getElementById("investment-amount").value;

        if (isNaN(parseInt(goal)) || isNaN(parseInt(horizonQuantity)) || isNaN(parseInt(amount))) {
          alert("Please fill in all fields with numeric values.");
          return false;
        }

        // Move to prompt section
        moveToPrompt();

        // Send request to AI
        askAI();

        return false; // Prevent form submission
      }

      // Function to move to prompt section
      function moveToPrompt() {
        var promptSection = document.getElementById("prompt-section");

        // Hide the risk assessment section and show the prompt section with smooth transition
        $("#advisory-section").slideUp("slow", function() {
          promptSection.style.display = "block";
          $("#prompt-section").slideDown("slow");
        });

        // Show the "Ask AI" button and input field
        showAskAI();
      }

      // Function to show the input field and Ask AI button
      function showAskAI() {
        var askAIDiv = document.getElementById("ask-ai-div");
        askAIDiv.style.display = "block";
      }

      // Function to send request to AI and display response
      function askAI() {
        var goal = document.getElementById("investment-goal").value;
        var horizonQuantity = document.getElementById("time-horizon-quantity").value;
        var horizonUnit = document.getElementById("time-horizon-unit").value;
        var amount = document.getElementById("investment-amount").value;
        var question = document.getElementById("ask-ai-prompt").value;

        // Constructing full sentence
        var fullSentence = "I want to gain " + goal + " SAR by investing " + amount + " SAR within " + horizonQuantity + " " + horizonUnit;

        // Retrieve conversation history from session storage
        var conversationHistory = JSON.parse(sessionStorage.getItem("conversationHistory")) || [];

        // Add user's question to conversation history
        conversationHistory.push({ role: "user", message: question || fullSentence });

        // Make AJAX request to server to get AI response
        $.ajax({
          type: "POST",
          url: "/ask-ai",
          data: { ask: question || fullSentence }, // Ask AI either from prompt or risk assessment form
          success: function(response) {
            console.log("Response:", response); // Debugging: Log AI response
            // Add AI's response to conversation history
            conversationHistory.push({ role: "ai", message: response.message });
            // Save conversation history to session storage
            sessionStorage.setItem("conversationHistory", JSON.stringify(conversationHistory));

            // Display conversation history
            displayConversationHistory();

            document.getElementById("ask-ai-prompt").value = ""; // Clear input field
          },
          error: function(xhr, status, error) {
            console.error("Error:", error);
            var errorMessage = "Sorry, something went wrong.";
            if (xhr.status === 401) {
              errorMessage = "Authentication error: Please check your API key.";
            } else if (xhr.status === 429) {
              errorMessage = "Quota exceeded: Please try again later.";
            }
            var aiResponses = document.getElementById("ai-responses");
            aiResponses.innerHTML += "<p class='error-message'>" + errorMessage + "</p>";
          }
        });
      }

      // Function to copy the last AI response
      function copyLastAIResponse() {
        var conversationHistory = JSON.parse(sessionStorage.getItem("conversationHistory")) || [];

        // Find the last AI response
        var lastAIResponse = conversationHistory.filter(item => item.role === "ai").pop();

        // If there is an AI response, copy it to the clipboard
        if (lastAIResponse) {
          navigator.clipboard.writeText(lastAIResponse.message)
            .then(() => {
              console.log('Last AI response copied to clipboard:', lastAIResponse.message);
              alert('Last AI response copied to clipboard!');
            })
            .catch(err => {
              console.error('Failed to copy:', err);
              alert('Failed to copy the last AI response.');
            });
        } else {
          alert('No AI response available to copy.');
        }
      }

      // Function to display conversation history
      function displayConversationHistory() {
        var aiResponses = document.getElementById("ai-responses");
        aiResponses.innerHTML = "";

        var conversationHistory = JSON.parse(sessionStorage.getItem("conversationHistory")) || [];

        conversationHistory.forEach(function(item) {
          aiResponses.innerHTML += "<p class='" + item.role + "-message'>" + item.role.charAt(0).toUpperCase() + item.role.slice(1) + ": " + item.message + "</p>";
        });
      }
    </script>
  </footer>
</body>
</html>
